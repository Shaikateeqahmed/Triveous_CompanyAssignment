Taking a Decisions While Building A Signup Functionality.

 1.Schema of a Users Collection:-
      Name = String,
      Email = String,
      Password = String,
      Phone_NO = String (We Can also Use a Bigint in pleace of String for Phone_NO, But String is more relevent here).

2.Validating a input for Signup (that is All the Fields are Fill or not).

3.Encrypting a Password by the help of npm package(bcrypt) for the Security Purpose.

==========================================================================================================

Taking a Decisions While Building A Login Functionality.

1.Validating a input for Login (that is All the Fields are Fill or not).

        Email = String,
        Password = String

2.Checking for User Already Signup or Not.

3.Comparing Hash Password with the given Password at the time of Login.

4.If User Already Signup And Password is Correct then Give them a Token.

=========================================================================================================

Taking a Decisions While Building A Authentication Functionality.

1.Checking is User Having a Token or Not.

2.Validating a Token.

3.Passing a UserID and UserRole to the req.body for Authorization and Security Purpose.

=========================================================================================================

Taking a Decisions While Building A Authorization Functionality.

1.Returning a Middleware which check the Role of the user then give the access.

2.Apply A Role Base Access Control.

========================================================================================================

Taking a Decisions While Building A Category EndPoint.

1.Make A Post Request. Followign are the Functionality in Post Request.
   i) Validating a input for Adding a Category(that is All the Fields are Fill or not).
              CategoryName = String,
              Active = Boolean
   ii) Only Admin Can Post Or Create A Category By the Help of Authorization Middleware (Role Base Access Control).
   iii) Checking for the Category is new or Already Exist.
   iv) Saving the Category Data in Database.

2.Make A Get Request. Followign are the Functionality in Get Request.
   i) Both Admin and Customer can Access the List of a Category.

3.Make A Patch Request. Followign are the Functionality in Patch Request.
   i) Only Admin Can Update the Activess of a Category.
   ii) Checking for Category by Given ID is Exist or Not For Update.
   iii) Updating a data of a category by ID.

4.Make A Delete Request. Followign are the Functionality in Delete Request.
   i) Only Admin Can Delete the Category.
   ii) Checking for Category by Given ID is Exist or Not for Delete.
   iii) Deleting a data of a category by ID.

======================================================================================================

Taking a Decisions While Building A Product EndPoint.

1.Make A Post Request. Followign are the Functionality in Post Request.
   i) Validating a input for Adding a Product(that is All the Fields are Fill or not).
              Title = String,
              Price = Number,
              Description = String,
              Availability = String,
              CategoryID = String
   ii) Only Admin Can Post Or Create A Product By the Help of Authorization Middleware (Role Base Access Control).
   iii) Saving the Category Data in Database.

2.Make A Get Request. Followign are the Functionality in Get Request.
   i) Both Admin and Customer can Access the List of a Products.

3.Make A Get Request For a Details of A Particular Product By ID. Followign are the Functionality in Get Request.
   i) Both Admin and Customer can Access the Product Details By ID.

4.Make A Patch Request. Followign are the Functionality in Patch Request.
   i) Only Admin Can Update the Availability of a Product.
   ii) Checking for Product by Given ID is Exist or Not For Update.
   iii) Updating a data of a Product by ID.

5.Make A Delete Request. Followign are the Functionality in Delete Request.
   i) Only Admin Can Delete the Product.
   ii) Checking for Product by Given ID is Exist or Not for Delete.
   iii) Deleting a data of a Product by ID.

============================================================================================================

Taking a Decisions While Building A Cart EndPoint.

1.Make A Post Request. Followign are the Functionality in Post Request.
   i) Validating a input for Adding to a card(that is All the Fields are Fill or not).
              ProductID = String,
              Quantity = Number,
              Price = Number,
   ii) Both Admin and Customer Can Add to cart A Product To They Respective Carts Only.
   iii) Saving the Cart Details with the Details of Product And Customer in Database.

2.Make A Get Request. Followign are the Functionality in Get Request.
   i) Both Customer And Admin Can Access to they respective Cart Only.

3.Make A Patch Request. Followign are the Functionality in Patch Request.
   i) Both Customer And Admin Can Update the Quantity of a Cart to they respective cart only.
   ii) Checking for Quantiy and CartID is Available for update the cart Quatity by the help of cartID.
   iii) Checking for User is Authorised to Update a Quantity of a Cart.

4.Make A Delete Request. Followign are the Functionality in Delete Request.
   i) Both Customer And Admin Can Update the Quantity of a Cart to they respective cart only.
   ii) Checking for User is Authorised to Delete the Item of a Cart.

=============================================================================================================

Taking a Decisions While Building A Order EndPoint.

1.Make A Get Request. Followign are the Functionality in Get Request.
   i) EndPoint For Handle Order Placement, Allowing Users to place an order with Products from their Cart.
   ii) Calculate A Order Date and Assume that Order will Deliver with in 7 days, on this Assupmtion also Calculate the Delivery Date.
   iii) Checking for is the cart exist or not.
   iv) Removing the Cart Information from the cart Collection for not appearing again after added to orders.

2.Make A Get Request. Followign are the Functionality in Get Request.
   i) EndPoint for Get the History of orders of a Perticular User Only.
   ii) Checking for Is User Make Any Order Or not.

3.Make A Get Request. Followign are the Functionality in Get Request.
    i) EndPoint for get the Details of a Particular Order by the help of OrderID.
    ii) Checking For the Order with the ID is Exist or not

4.Make A Delete Request. Followign are the Functionality in Delete Request.
   i) EndPoint for Deleting of a Particular Order by the help of OrderID.
   ii) Checking For the Order with the ID is Exist or not
   iii) Deleting The Order If Exist.

